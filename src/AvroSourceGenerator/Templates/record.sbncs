{{~ $type = schema | avro.type ~}}
{{~ $record = schema | avro.record ~}}
{{~ include 'comment' documentation: $record.Documentation ~}}
[global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
[global::System.CodeDom.Compiler.GeneratedCode("AvroSourceGenerator", "1.0.0.0")]
{{~ include 'attributes' schema: $record ~}}
{{ AccessModifier }} partial {{ IsRecordDeclaration ? 'record' : 'class' }} {{ $type.Name }} : global::Avro.Specific.ISpecificRecord
{    
    {{~ $fieldTypes = $record.Fields | array.map 'Schema' | array.each @avro.type ~}}
    {{~ for field in $record.Fields ~}}
    {{ include 'field' field: field type: $fieldTypes[for.index] ~}}
    {{~ end ~}}
 
    public global::Avro.Schema Schema { get => {{ $type.Name }}._SCHEMA; }
    public static readonly global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse("""
    {{ $record.Json }}
    """);

    {{ include 'getput' containingTypeName: $type.Name fields: $record.Fields fieldTypes: $fieldTypes override: false ~}}
}

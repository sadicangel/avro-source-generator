// <auto-generated/>
#pragma warning disable CS8618, CS8633, CS8714, CS8775, CS8981
#nullable enable
    [global::System.CodeDom.Compiler.GeneratedCode("AvroSourceGenerator", "1.0.0.0")]
    public partial record Wrapper
    {
        public required global::This.Is.A.Full.Name Field1 { get; init; }
        /// <summary>
        /// This is a reference to the record 'Name' by its full name 'This.Is.A.Full.Name'.
        /// </summary>
        public required global::This.Is.A.Full.Name Field2 { get; init; }
        public required global::This.Is.A.Full.OtherName Field3 { get; init; }
    }
    
    partial record Wrapper : global::Avro.Specific.ISpecificRecord
    {
        global::Avro.Schema global::Avro.Specific.ISpecificRecord.Schema { get => Wrapper.s_schema; }
        private static readonly global::Avro.Schema s_schema = global::Avro.Schema.Parse(
        """
        {
          "type": "record",
          "name": "Wrapper",
          "fields": [
            {
              "name": "Field1",
              "type": {
                "type": "record",
                "name": "Name",
                "namespace": "This.Is.A.Full",
                "fields": []
              }
            },
            {
              "name": "Field2",
              "type": "This.Is.A.Full.Name",
              "doc": "This is a reference to the record \u0027Name\u0027 by its full name \u0027This.Is.A.Full.Name\u0027."
            },
            {
              "name": "Field3",
              "type": {
                "type": "record",
                "name": "OtherName",
                "namespace": "This.Is.A.Full",
                "fields": [
                  {
                    "name": "Field4",
                    "type": "Name",
                    "doc": "This is a reference to the record \u0027Name\u0027 defined in the same namespace as the enclosing type \u0027OtherName\u0027."
                  }
                ]
              }
            }
          ]
        }
        """);
    
        object? global::Avro.Specific.ISpecificRecord.Get(int fieldPos)
        {
            switch (fieldPos)
            {
                case 0: return this.Field1;
                case 1: return this.Field2;
                case 2: return this.Field3;
                default: throw new global::Avro.AvroRuntimeException($"Bad index {fieldPos} in Get()");
            }
        }
        
        void global::Avro.Specific.ISpecificRecord.Put(int fieldPos, object? fieldValue)
        {
            switch (fieldPos)
            {
                case 0:
                    Set_Field1(this, (global::This.Is.A.Full.Name)fieldValue!); break;
                    [global::System.Runtime.CompilerServices.UnsafeAccessor(global::System.Runtime.CompilerServices.UnsafeAccessorKind.Method, Name = "set_Field1")]
                    extern static void Set_Field1(Wrapper obj, global::This.Is.A.Full.Name value);
                case 1:
                    Set_Field2(this, (global::This.Is.A.Full.Name)fieldValue!); break;
                    [global::System.Runtime.CompilerServices.UnsafeAccessor(global::System.Runtime.CompilerServices.UnsafeAccessorKind.Method, Name = "set_Field2")]
                    extern static void Set_Field2(Wrapper obj, global::This.Is.A.Full.Name value);
                case 2:
                    Set_Field3(this, (global::This.Is.A.Full.OtherName)fieldValue!); break;
                    [global::System.Runtime.CompilerServices.UnsafeAccessor(global::System.Runtime.CompilerServices.UnsafeAccessorKind.Method, Name = "set_Field3")]
                    extern static void Set_Field3(Wrapper obj, global::This.Is.A.Full.OtherName value);
                default:
                    throw new global::Avro.AvroRuntimeException($"Bad index {fieldPos} in Put()");
            }
        }
    }
#nullable restore
#pragma warning restore CS8618, CS8633, CS8714, CS8775

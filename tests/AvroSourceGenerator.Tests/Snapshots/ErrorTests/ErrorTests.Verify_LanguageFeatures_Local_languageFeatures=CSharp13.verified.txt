// <auto-generated/>
#pragma warning disable CS8618, CS8633, CS8714, CS8775, CS8981
#nullable enable
namespace SchemaNamespace
{
    [global::System.CodeDom.Compiler.GeneratedCode("AvroSourceGenerator", "1.0.0.0")]
    public partial class Error : global::Avro.Specific.SpecificException
    {
        public required int ErrorCode { get; init; }
        public required string ErrorText { get; init; }
        
        public override global::Avro.Schema Schema { get => Error._SCHEMA; }
        public static readonly global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse("""
        {
          "type": "error",
          "namespace": "SchemaNamespace",
          "name": "Error",
          "fields": [
            {
              "name": "ErrorCode",
              "type": "int"
            },
            {
              "name": "ErrorText",
              "type": "string"
            }
          ]
        }
        """);
    
        public override object? Get(int fieldPos)
        {
            switch (fieldPos)
            {
                case 0: return this.ErrorCode;
                case 1: return this.ErrorText;
                default: throw new global::Avro.AvroRuntimeException($"Bad index {fieldPos} in Get()");
            }
        }
        
        public override void Put(int fieldPos, object? fieldValue)
        {
            switch (fieldPos)
            {
                case 0:
                    Set_ErrorCode(this, (int)fieldValue!); break;
                    [global::System.Runtime.CompilerServices.UnsafeAccessor(global::System.Runtime.CompilerServices.UnsafeAccessorKind.Method, Name = "set_ErrorCode")]
                    extern static void Set_ErrorCode(Error obj, int value);
                case 1:
                    Set_ErrorText(this, (string)fieldValue!); break;
                    [global::System.Runtime.CompilerServices.UnsafeAccessor(global::System.Runtime.CompilerServices.UnsafeAccessorKind.Method, Name = "set_ErrorText")]
                    extern static void Set_ErrorText(Error obj, string value);
                default:
                    throw new global::Avro.AvroRuntimeException($"Bad index {fieldPos} in Put()");
            }
        }
    }

}
#nullable restore
#pragma warning restore CS8618, CS8633, CS8714, CS8775
